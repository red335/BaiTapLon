<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox6.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>